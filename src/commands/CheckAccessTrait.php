<?php


namespace bobroid\memesRedirectorBot\commands;


use bobroid\memesRedirectorBot\helpers\ConfigurationHelper;
use Longman\TelegramBot\Entities\Message;
use Longman\TelegramBot\Entities\ServerResponse;
use Longman\TelegramBot\Entities\Update;
use Longman\TelegramBot\Exception\TelegramException;
use Longman\TelegramBot\Request;

/**
 * Trait CheckAccessTrait
 * @package bobroid\memesRedirectorBot\commands
 *
 * @method Message getMessage
 * @method Update getUpdate
 */
trait CheckAccessTrait
{

    /**
     * @return int|null
     */
    public function getChatId(): ?int
    {
        $chatId = null;

        if ($this->getMessage()) {
            $chatId = $this->getMessage()->getChat()->getId();
        } else if ($this->getUpdate()) {
            $chatId = $this->getUpdate()->getEditedMessage()->getChat()->getId();
        }

        return $chatId;
    }

    /**
     * @return ServerResponse
     * @throws TelegramException
     */
    public function preExecute(): ServerResponse
    {
        if (!($this->getUpdate() && $this->getUpdate()->getCallbackQuery())) {
            $chatId = $this->getChatId();

            if ($this->getMessage()->getChat()->isPrivateChat() === false) {
                return Request::emptyResponse();
            }

            if (!in_array($chatId, ConfigurationHelper::getAdminsIDs(), true)) {
                return Request::sendMessage([
                    'chat_id'   =>  $chatId,
                    'text'      =>  'I work just from my creator, so sorry'
                ]);
            }
        }

        return parent::preExecute(); // TODO: Change the autogenerated stub
    }

}